// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ReviewSource {
  HOSTAWAY
  GOOGLE
}

enum ReviewType {
  HOST_TO_GUEST
  GUEST_TO_HOST
}

enum ReviewChannel {
  AIRBNB
  BOOKING
  DIRECT
  UNKNOWN
}

enum ReviewStatus {
  PUBLISHED
  HIDDEN
  DRAFT
}

enum ReviewCategoryType {
  CLEANLINESS
  COMMUNICATION
  ACCURACY
  CHECKIN
  LOCATION
  VALUE
  RESPECT_HOUSE_RULES
  OTHER
}


model Listing {
  id                 String   @id @default(uuid())
  name               String
  slug               String   @unique
  hostawayListingId  String?  @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  reviews            Review[]

  @@index([name])
}

model Review {
  id              String         @id @default(uuid())
  source          ReviewSource
  sourceReviewId  String
  listingId       String
  listing         Listing        @relation(fields: [listingId], references: [id], onDelete: Cascade)

  type            ReviewType
  channel         ReviewChannel  @default(UNKNOWN)
  status          ReviewStatus   @default(PUBLISHED)

  ratingOverall   Decimal?       @db.Decimal(3, 2) 
  submittedAt     DateTime
  guestName       String
  publicReview    String         @db.Text
  isApproved      Boolean        @default(false)

  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  categories      ReviewCategory[]

  @@unique([source, sourceReviewId])
  @@index([listingId, submittedAt])
  @@index([isApproved])
  @@index([status])
  @@index([submittedAt])
}

model ReviewCategory {
  id        String            @id @default(uuid())
  reviewId  String
  review    Review            @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  category  ReviewCategoryType
  rating    Int              

  @@index([category])
  @@index([reviewId])
}
